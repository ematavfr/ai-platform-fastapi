# Configuration Nginx
events {
    worker_connections 1024;
}

http {
    upstream api_backend {
        server api-server:8000;
    }
    
    upstream ml_backend {
        server ml-service:8001;
    }
    
    # Configuration pour l'API principale
    server {
        listen 80;
        server_name api.localhost;
        
        location / {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Configuration pour le service ML
    server {
        listen 80;
        server_name ml.localhost;
        
        location / {
            proxy_pass http://ml_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Configuration par d√©faut
    server {
        listen 80 default_server;
        
        location /api/ {
            proxy_pass http://api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /ml/ {
            rewrite ^/ml/(.*) /$1 break;
            proxy_pass http://ml_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location / {
            return 200 '{"message": "AI Platform Gateway", "services": {"api": "/api/", "ml": "/ml/"}}';
            add_header Content-Type application/json;
        }
    }
}